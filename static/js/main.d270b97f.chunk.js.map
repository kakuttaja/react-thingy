{"version":3,"sources":["App.js","reportWebVitals.js","index.js","catto3.jpg"],"names":["ToggleableHeading","React","createElement","className","ReactMarkdown","children","components","code","_ref","node","inline","props","_objectWithoutProperties","match","exec","SyntaxHighlighter","Object","assign","String","replace","style","atomDark","language","PreTag","MarkdownDiv","remarkPlugins","remarkGfm","Tests","Catto","href","src","cat","alt","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"kNASA,SAASA,IAkBP,OACEC,IAAAC,cAAA,OAAKC,UAAU,aAEbF,IAAAC,cAACE,IAAa,CACdC,SArBY,yYAsBZC,WAAY,CACVC,KAAI,SAAAC,GAAMA,EAAJC,KAA8C,IAAxCC,EAAMF,EAANE,OAAQP,EAASK,EAATL,UAAWE,EAAQG,EAARH,SAAaM,EAAKC,YAAAJ,EAAA,0CACzCK,EAAQ,iBAAiBC,KAAKX,GAAa,IACjD,OAAQO,GAAUG,EAChBZ,IAAAC,cAACa,IAAiBC,OAAAC,OAAA,GACZN,EAAK,CACTN,SAAUa,OAAOb,GAAUc,QAAQ,MAAO,IAC1CC,MAAOC,IACPC,SAAUT,EAAM,GAChBU,OAAO,SAGTtB,IAAAC,cAAA,OAAAc,OAAAC,OAAA,GAAUN,EAAK,CAAER,UAAWA,IACzBE,QASf,SAASmB,IAcP,OACEvB,IAAAC,cAAA,OACAC,UAAU,eACRF,IAAAC,cAAA,MAAIC,UAAU,mBAAkB,SAChCF,IAAAC,cAACE,IAAa,CAACqB,cAAe,CAACC,MAjBjB,2iBAoBdzB,IAAAC,cAACF,EAAiB,OAKxB,SAAS2B,IACP,OACE1B,IAAAC,cAAA,OACAC,UAAU,QACRF,IAAAC,cAAA,OACEC,UAAU,iBACVF,IAAAC,cAAA,KAAGC,UAAU,YAAW,oCAMhC,SAASyB,IACP,OACE3B,IAAAC,cAAA,KAAGC,UAAU,SAAS0B,KAAK,gCACzB5B,IAAAC,cAAA,OAAK4B,IAAKC,IAAK5B,UAAU,WAAW6B,IAAI,UAoB/BC,MAff,WACE,OACEhC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAACsB,EAAW,MACZvB,IAAAC,cAAC0B,EAAK,MACN3B,IAAAC,cAAA,KAAGC,UAAU,QAAO,QAGpBF,IAAAC,cAACyB,EAAK,SCjGCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,WAAqBD,KAAK,SAAA/B,GAAiD,IAA9CiC,EAAMjC,EAANiC,OAAQC,EAAMlC,EAANkC,OAAQC,EAAMnC,EAANmC,OAAQC,EAAMpC,EAANoC,OAAQC,EAAOrC,EAAPqC,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjD,IAAAC,cAACD,IAAMkD,WAAU,KACflD,IAAAC,cAAC+B,EAAG,QAORC,wBChBAkB,EAAAC,QAAiBhB,EAAAiB,EAAuB","file":"static/js/main.d270b97f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport cat from './catto3.jpg';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {atomDark} from 'react-syntax-highlighter/dist/esm/styles/prism'\n\n\nfunction ToggleableHeading() {\n  const pythonCode = `\n  (Also featuring code blocks)\n  ~~~python\n  # This is just an example Python code block (checks if n is a prime number)\n  def is_prime(n: int) -> bool:\n    if n <= 1:\n      return False\n    elif n == 2:\n      return True\n    elif n % 2 == 0:\n      return False\n    for i in range(3, int(n ** 0.5) + 1, 2):\n      if n % i == 0:\n        return False\n    return True\n  ~~~\n  `\n  return (\n    <div className=\"CodeBlock\">\n      {/* Jesus, what is this code*/}\n      <ReactMarkdown\n      children={pythonCode}\n      components={{\n        code({node, inline, className, children, ...props}) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            <SyntaxHighlighter\n              {...props}\n              children={String(children).replace(/\\n$/, '')}\n              style={atomDark}\n              language={match[1]}\n              PreTag=\"div\"\n            />\n          ) : (\n            <code {...props} className={className}>\n              {children}\n            </code>\n          )\n        }\n      }}/>\n    </div>\n  );\n}\n\nfunction MarkdownDiv() {\n  const markdownText = `\n  This is an example Markdown div to show an example of markdown usage \n  with [*GitHub Flavored Markdown*](https://github.github.com/gfm/). \n  Made with [React](https://react.dev/) just to try out something new, \n  using the [React-markdown](https://github.com/remarkjs/react-markdown) component for markdown rendering.\n  GitHub Flavored Markdown is nice as it supports footnotes[^1] and has nice in-line tables support as well.\n\n  Just | Like | So\n  :---: | :---: | :---:\n  Simplicity | Is | Nice.\n  \n  [^1]: Footnotes thanks to gfm.\n  `\n  return (\n    <div\n    className=\"MarkdownDiv\">\n      <h3 className=\"MarkdownHeading\">Cake!</h3>\n      <ReactMarkdown remarkPlugins={[remarkGfm]}>\n        {markdownText}\n      </ReactMarkdown>\n      <ToggleableHeading/>\n    </div>\n  )\n}\n\nfunction Tests() {\n  return (\n    <div \n    className=\"Test\">\n      <div\n        className=\"transitionDiv\" >\n        <p className=\"CakeTest\">This is a cake-test component.</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Catto() {\n  return (  \n    <a className=\"CatDiv\" href=\"https://github.com/kakuttaja\">\n      <img src={cat} className=\"App-logo\" alt=\"logo\"/>\n    </a>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MarkdownDiv />\n        <Catto />\n        <p className=\"Cake\">\n          Cake\n        </p>\n        <Tests />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/catto3.38c593f4.jpg\";"],"sourceRoot":""}